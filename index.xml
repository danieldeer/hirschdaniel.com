<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HirschDaniel</title>
    <link>https://hirschdaniel.com/</link>
    <description>Recent content on HirschDaniel</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 13 Sep 2024 15:51:54 +0200</lastBuildDate>
    <atom:link href="https://hirschdaniel.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Resources</title>
      <link>https://hirschdaniel.com/resources/</link>
      <pubDate>Fri, 13 Sep 2024 15:51:54 +0200</pubDate>
      <guid>https://hirschdaniel.com/resources/</guid>
      <description>Table of contents for this page:
Book Recommendations Slides and Cheat Sheets Book Recommendations I can&amp;rsquo;t stand the books &amp;ldquo;Clean Code&amp;rdquo;, &amp;ldquo;Effective Java&amp;rdquo;, and &amp;ldquo;Pragmatic Programmer&amp;rdquo;. And don&amp;rsquo;t even mention &amp;ldquo;The Phoenix Project&amp;rdquo;. They are incredibly overhyped. Everybody on LinkedIn is bragging when they make it through one of those, as if they just read the bible. Not me. I&amp;rsquo;ve read them all and can tell you: There are much better books out there.</description>
    </item>
    <item>
      <title>Apache Kafka Introduction (Architecture made easy)</title>
      <link>https://hirschdaniel.com/blog/apache-kafka-introduction/</link>
      <pubDate>Fri, 13 Sep 2024 13:29:49 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/apache-kafka-introduction/</guid>
      <description>In today’s world of distributed systems, data moves fast, and applications need to handle huge volumes of data in real time. Whether you&amp;rsquo;re building microservices, integrating external systems, or managing streaming data, ensuring smooth communication between data producers and consumers is crucial. This is where Apache Kafka comes in—a powerful event streaming platform that enables scalable and decoupled data exchange.
A Beginner&amp;rsquo;s Guide to Apache Kafka: Event Streaming Made Easy I’m Daniel Hirsch, a software engineer based in Germany, and in this post, I’ll share insights from my exploration of Apache Kafka, helping you understand its core concepts and how it solves common problems in modern software architectures.</description>
    </item>
    <item>
      <title>How to: Decompile Java Crackme and Develop a Keygen</title>
      <link>https://hirschdaniel.com/blog/decompile-java-crackme-and-develop-keygen/</link>
      <pubDate>Wed, 11 Sep 2024 12:13:47 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/decompile-java-crackme-and-develop-keygen/</guid>
      <description>I recently downloaded a Java Crackme .jar and looked at what I, as a mortal Java developer, can do with it.
A few years ago, I spent a few days working on reverse engineering and the associated tools such as Ghidra. I can also highly recommend the book Hacking: The Art of Exploitation which should immediately ignite a spark in anyone interested. For me, as someone inexperienced in C, even the introduction to the assembly language was tough going.</description>
    </item>
    <item>
      <title>After learning about Github pages, I will never pay for hosting again</title>
      <link>https://hirschdaniel.com/blog/github-pages-saves-money/</link>
      <pubDate>Sun, 08 Sep 2024 14:42:37 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/github-pages-saves-money/</guid>
      <description>Over the last 10 years, I published at least 20 different websites. Some of them went viral and reached tens of thousands of daily visitors. But most of them went under the radar. For small websites, I had a shared hosting plan. I paid 10$ for unlimited domains on a shared host. Performance was meh. But I had no complaints from the visitors I had. A couple of websites I moved to a dedicated cloud hosting provider, which provides me a powerful server to run wordpress on.</description>
    </item>
    <item>
      <title>Vim Ctags Cheat Sheet</title>
      <link>https://hirschdaniel.com/blog/vim-cheat-sheet/</link>
      <pubDate>Sat, 07 Sep 2024 10:26:37 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/vim-cheat-sheet/</guid>
      <description>There are dozens of good vim cheat sheets online. Why do another one? This one is a cheat sheet tailored to my workflow for generating ctags. Let&amp;rsquo;s have a look.
Generate ctags like this (replace js with whatever language files you want to ignore, if any. I don&amp;rsquo;t code javascript, but my projects contain tons of js files, so I exclude them):
ctags -R -f ~/.ctags --exclude=&#39;*.js&#39; &amp;lt;path-to-project&amp;gt;
If your project contains a language that is not supported by ctags, but is related to another familiar language, you can use langmap.</description>
    </item>
    <item>
      <title>Hugo Cheat Sheet</title>
      <link>https://hirschdaniel.com/blog/second/</link>
      <pubDate>Sat, 07 Sep 2024 10:19:39 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/second/</guid>
      <description>Here&amp;rsquo;s a list of useful hugo commands I regularly use.
# Build your hugo project hugo # Create a new content file hugo new &amp;lt;path&amp;gt; # For example: hugo new posts/hugo-cheat-sheet.md # Run the hugo development server hugo server Remember to set draft = false for content to be displayed.</description>
    </item>
    <item>
      <title>I decided Wordpress is for freaks and dumped it</title>
      <link>https://hirschdaniel.com/blog/first/</link>
      <pubDate>Sun, 01 Sep 2024 10:48:07 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/first/</guid>
      <description>I&amp;rsquo;ve been publishing wordpress websites for well over 10 years now. Wordpress was working well for me once I was familiar and knew a set of plugins to use. I knew exactly which caching, security, image compression, host, etc. to install to get things running smoothly. Somehow, this still doesn&amp;rsquo;t feel simple enough. No way every website is built like this.
Back in school, I learned that a website is just HTML (for content) and CSS (for styling).</description>
    </item>
    <item>
      <title>About</title>
      <link>https://hirschdaniel.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hirschdaniel.com/about/</guid>
      <description>I&amp;rsquo;m Daniel Hirsch, a Software Engineer who enjoys solving technical problems and working on complex systems with a focus on getting things done while maintaining quality, maintainability, and robustness.
References I am honored to be given the opportunity to work on many different projects, ranging from simple wordpress setups and content production to complex software development for aerospace.
Every project allowed me to expand and contribute knowledge.
Certificates </description>
    </item>
  </channel>
</rss>
