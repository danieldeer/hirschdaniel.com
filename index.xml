<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HirschDaniel</title>
    <link>https://hirschdaniel.com/</link>
    <description>Recent content on HirschDaniel</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 16 Apr 2025 20:39:58 +0200</lastBuildDate>
    <atom:link href="https://hirschdaniel.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building VanityLib with Supabase</title>
      <link>https://hirschdaniel.com/blog/supabase/</link>
      <pubDate>Wed, 16 Apr 2025 20:39:58 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/supabase/</guid>
      <description>Today I built a small project using Supabase as a backend. The project is called VanityLib, and it’s a public directory of rare Bitcoin addresses — each one pre-generated with a readable prefix and paired with a private key. The user can browse them in a table and pick one. Once selected, the address should be removed from the database.
I started by signing up for Supabase and creating a new project.</description>
    </item>
    <item>
      <title>Clear Thinking through Notetaking</title>
      <link>https://hirschdaniel.com/blog/clean-thinking-and-note-taking/</link>
      <pubDate>Fri, 11 Apr 2025 11:17:58 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/clean-thinking-and-note-taking/</guid>
      <description>Take notes, so you don&amp;rsquo;t have to remember everything.
You can get pocket notebooks for cheap. They are like an extension for your brain.
And I don&amp;rsquo;t mean to note just work stuff. Note genuine thoughts and ideas.
Digital notes to speed you up For work-related note taking, use whatever text editor you wish. Obsidian is quite nice. But any editor will do. Use vim if you&amp;rsquo;re a nerd. Save your notes in more than one place to protect them from being lost.</description>
    </item>
    <item>
      <title>Practical Vim Commands for Real Developers</title>
      <link>https://hirschdaniel.com/blog/practical-vim-commands-for-real-developers/</link>
      <pubDate>Sat, 28 Sep 2024 14:57:51 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/practical-vim-commands-for-real-developers/</guid>
      <description>If you&amp;rsquo;re comfortable with basic Vim commands and want to take your skills to the next level, this guide will help you unlock some of the best tools Vim has to offer. Whether you&amp;rsquo;re programming, editing files, or working on large projects, these commands will make your workflow lightning-fast. In this post, we&amp;rsquo;ll cover six main categories of commands: file navigation, searching, grepping, editing, and autocomplete, all using vanilla Vim—no custom configuration required.</description>
    </item>
    <item>
      <title>Developing a Bot to Automate Web Activity on a XenForo-Based Forum</title>
      <link>https://hirschdaniel.com/blog/develop-a-social-media-bot/</link>
      <pubDate>Sun, 22 Sep 2024 21:42:22 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/develop-a-social-media-bot/</guid>
      <description>As a software engineer, automation is a natural extension of problem-solving when dealing with repetitive tasks. And in general, if you ever give me any task that involves a hint of repetition, you can expect me to automate it. Automating something complex to save time is both pleasing and rewarding.
Recently, I worked on a project to automate interactions with a XenForo-based forum, saving myself countless hours of manual work. While I won’t disclose the specifics of the forum, the project involved fetching posts, extracting URLs, and automating interactions such as &amp;ldquo;liking&amp;rdquo; posts via HTTP POST requests.</description>
    </item>
    <item>
      <title>Advanced REST and HTTP: Status Codes, Headers, and Best Practices for Scalable RESTful APIs</title>
      <link>https://hirschdaniel.com/blog/advanced-rest-and-http-concepts/</link>
      <pubDate>Tue, 17 Sep 2024 14:47:58 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/advanced-rest-and-http-concepts/</guid>
      <description>When it comes to building and consuming REST APIs, many developers stop at the basics: GET, POST, PUT, DELETE, and a few status codes like 200 or 404. But REST is much more nuanced than that. Understanding REST deeply means mastering the underlying HTTP protocol, knowing how to design APIs that scale, and ensuring security and performance are top-notch.
1. Advanced HTTP: More than POST &amp;amp; GET Many developers think of REST APIs simply as CRUD (change, read, update, delete) operations accessed via HTTP.</description>
    </item>
    <item>
      <title>Refactoring and Mavenizing a Java Bruteforcing Library</title>
      <link>https://hirschdaniel.com/blog/refactoring-and-mavenizing-java-bruteforcer-project/</link>
      <pubDate>Sat, 14 Sep 2024 14:28:15 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/refactoring-and-mavenizing-java-bruteforcer-project/</guid>
      <description>Today, I’m taking on a small yet significant project: cleaning up and improving one of my older repositories on GitHub. It’s a Java bruteforcer I coded about three years ago.
I documented the whole process on YouTube. There, you can see me execute all the steps described below. Of course it can&amp;rsquo;t compete with popular bruteforcers such as hashcat, the password recovery tool that ships with Kali Linux. But it works well anyways.</description>
    </item>
    <item>
      <title>Imprint</title>
      <link>https://hirschdaniel.com/imprint/</link>
      <pubDate>Fri, 13 Sep 2024 16:42:58 +0200</pubDate>
      <guid>https://hirschdaniel.com/imprint/</guid>
      <description>Deutsch Impressum
Daniel Hirsch
Kiefernweg 17
36110 Schlitz
Deutschland
E-Mail: contact[at]hirschdaniel.com
Haftungsausschluss:
Die Inhalte dieser Website wurden mit größtmöglicher Sorgfalt erstellt. Für die Richtigkeit, Vollständigkeit und Aktualität der Inhalte kann jedoch keine Gewähr übernommen werden.
Urheberrecht:
Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung außerhalb der Grenzen des Urheberrechtes bedürfen der schriftlichen Zustimmung des jeweiligen Autors bzw.</description>
    </item>
    <item>
      <title>Apache Kafka Introduction: Concepts and Terminology</title>
      <link>https://hirschdaniel.com/blog/apache-kafka-introduction/</link>
      <pubDate>Fri, 13 Sep 2024 13:29:49 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/apache-kafka-introduction/</guid>
      <description>In today’s world of distributed systems, data moves fast, and applications need to handle huge volumes of data in real time. Whether you&amp;rsquo;re building microservices, integrating external systems, or managing streaming data, ensuring smooth communication between data producers and consumers is crucial. This is where Apache Kafka comes in—a powerful event streaming platform that enables scalable and decoupled data exchange.
A Beginner&amp;rsquo;s Guide to Apache Kafka: Event Streaming Made Easy I’m Daniel Hirsch, a software engineer based in Germany, and in this post, I’ll share insights from my exploration of Apache Kafka, helping you understand its core concepts and how it solves common problems in modern software architectures.</description>
    </item>
    <item>
      <title>Reverse Engineering and Coding a Keygen for a Java Crackme</title>
      <link>https://hirschdaniel.com/blog/decompile-java-crackme-and-develop-keygen/</link>
      <pubDate>Wed, 11 Sep 2024 12:13:47 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/decompile-java-crackme-and-develop-keygen/</guid>
      <description>I recently downloaded a Java Crackme .jar and looked at what I, as a mortal Java developer, can do with it.
A few years ago, I spent a few days working on reverse engineering and the associated tools such as Ghidra. I can also highly recommend the book Hacking: The Art of Exploitation which should immediately ignite a spark in anyone interested. For me, as someone inexperienced in C, even the introduction to the assembly language was tough going.</description>
    </item>
    <item>
      <title>Wie es geht: Java Crackme Dekompilieren und Keygen Programmieren</title>
      <link>https://hirschdaniel.com/blog/decompile-java-crackme-and-develop-keygen.de/</link>
      <pubDate>Tue, 10 Sep 2024 11:54:47 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/decompile-java-crackme-and-develop-keygen.de/</guid>
      <description>Ich habe mir mal eine Java Crackme .jar heruntergeladen und geschaut was ich als sterblicher Java Entwickler so damit anfangen kann.
Vor einigen Jahren habe ich mich mal ein paar Tage lang mit Reverse Engineering und den dazugehörigen Tools wie Ghidra beschäftigt. Auch sehr empfehlen kann ich das Buch Hacking: The Art of Exploitation welches bei jedem Interessierten sofort einen Funken zünden sollte. Für mich als C Unerfahrenen war selbst die Einleitung zur Assembly-Sprache schon harte Kost.</description>
    </item>
    <item>
      <title>Hosting Static Content on GitHub Pages</title>
      <link>https://hirschdaniel.com/blog/github-pages-saves-money/</link>
      <pubDate>Sun, 08 Sep 2024 14:42:37 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/github-pages-saves-money/</guid>
      <description>Over the last 10 years, I published at least 20 different websites. Some of them went viral and reached tens of thousands of daily visitors. But most of them went under the radar. For small websites, I had a shared hosting plan. I paid 10$ for unlimited domains on a shared host. Performance was meh. But I had no complaints from the visitors I had. A couple of websites I moved to a dedicated cloud hosting provider, which provides me a powerful server to run wordpress on.</description>
    </item>
    <item>
      <title>Vim Ctags Cheat Sheet</title>
      <link>https://hirschdaniel.com/blog/vim-cheat-sheet/</link>
      <pubDate>Sat, 07 Sep 2024 10:26:37 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/vim-cheat-sheet/</guid>
      <description>There are dozens of good vim cheat sheets online. Why do another one? This one is a cheat sheet tailored to my workflow for generating ctags. Let&amp;rsquo;s have a look.
Generate ctags like this (replace js with whatever language files you want to ignore, if any. I don&amp;rsquo;t code javascript, but my projects contain tons of js files, so I exclude them):
ctags -R -f ~/.ctags --exclude=&#39;*.js&#39; &amp;lt;path-to-project&amp;gt;
If your project contains a language that is not supported by ctags, but is related to another familiar language, you can use langmap.</description>
    </item>
    <item>
      <title>Hugo Cheat Sheet</title>
      <link>https://hirschdaniel.com/blog/second/</link>
      <pubDate>Sat, 07 Sep 2024 10:19:39 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/second/</guid>
      <description>Here&amp;rsquo;s a list of useful hugo commands I regularly use.
# Build your hugo project hugo # Create a new content file hugo new &amp;lt;path&amp;gt; # For example: hugo new posts/hugo-cheat-sheet.md # Run the hugo development server hugo server Remember to set draft = false for content to be displayed.</description>
    </item>
    <item>
      <title>Launching a Hugo Website</title>
      <link>https://hirschdaniel.com/blog/first/</link>
      <pubDate>Sun, 01 Sep 2024 10:48:07 +0200</pubDate>
      <guid>https://hirschdaniel.com/blog/first/</guid>
      <description>I&amp;rsquo;ve been publishing wordpress websites for well over 10 years now. Wordpress was working well for me once I was familiar and knew a set of plugins to use. I knew exactly which caching, security, image compression, host, etc. to install to get things running smoothly. Somehow, this still doesn&amp;rsquo;t feel simple enough. No way every website is built like this.
Back in school, I learned that a website is just HTML (for content) and CSS (for styling).</description>
    </item>
    <item>
      <title>About</title>
      <link>https://hirschdaniel.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hirschdaniel.com/about/</guid>
      <description>I&amp;rsquo;ve worked with several companies and institutions. Here is a table of references.
Recipient Completed Work European Space Agency (ESA) Maintenance and development of EGS-CC and EMS Portal &amp;mdash; &amp;mdash; &amp;mdash; &amp;mdash; &amp;mdash; </description>
    </item>
    <item>
      <title>GPG</title>
      <link>https://hirschdaniel.com/gpg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hirschdaniel.com/gpg/</guid>
      <description>-----BEGIN PGP PUBLIC KEY BLOCK----- mQINBGgPM8sBEAC3lsM8B4AhCJFe5gXlpKeZ7Jm/Sx5AWwo0cStzV80lDADndl6S CMM4xtEvzaMTJQ6cBbdzh1yqovwzez0fR3VfwQyMMKvWAo4wPS8jlCwie54uNjrs ukPA/RIbNVRwWWV5rn7OPCFiIDpCqr0RvfBuHp54/kJPvB5ZyxsgxogdhZE+VQ+r ho3yc9VDwhUaSKS3TAV6732J6oDuCcGBTfFSS3pyl7vV4KpNdf83vTuFOTt1AZe6 uX8Q94N7EdN8hV89dag3PUGg4Y9Gd47uc2vVU/20lgiXqwNTYUc9UJzzc35rxx5e u4x8R+I2TtopRLd9lUnYPs7jvWD9qKWjDe9Kn7UwWqgjlPWkOjjcz7mquErwBWm1 Y1WyJckzb/X5wPr7DNkRMN2WWBlC/GXGRMsuqvr6c9eBy1uZaDPDEQIXQDEauM3F 1bYSpdC4padn/ldDr0xuhK313vEXUIAyylZQL5uL5n4VbiGrcBc2XPZb1SLDTjqo yZhDDxGyLt3Fwqvo6dRtStd96CfAzLRcC4Osm78cAoRDWGwy7bYcqoITW8O265Gv Zix5a46zLpn9hvUZFy8dM2d/MDj0w1dnnLf8UsQSlOuxW4K5tiI0T0gKkyhi4Spm lEUT6USUecaLKeJN7rlmt08gu3PrcnshKn/ScG2j5VU2waHc5lvyDozADwARAQAB tChEYW5pZWwgSGlyc2NoIDxjb250YWN0QGhpcnNjaGRhbmllbC5jb20+iQJOBBMB CgA4FiEEJWp++5Hrs/h/8FREFPreGNzgz2oFAmgPM8sCGwMFCwkIBwIGFQoJCAsC BBYCAwECHgECF4AACgkQFPreGNzgz2oqnBAAmv2o9sfmWEZsqEWc3aDgYCdT75tB NGVdSDY6GbQ8RAnNNlKsaR2DYGkUFIRfB6AlfqsyaAJqP5JRM9LmF6C5KHNw0BY5 12kImrYtRAawmleqCag85RPzzrdMPAhj4BVBBoetOOS8fwmS3JHAPwkdSXUVNxRF 1bGOz+/TqmLhiKqnf+T+zG0KO0lGxZ9JMkpbkkCnOfNzIUs6V4DUvGhWL5tVcp9Q FBLK6NjfAjn2Ry4L6UIegWbo+suME+YzMg3TuKscNDpR/c4MqcnkvMreYfZpT58K bFlkx4BaybjImadqjUkJx15RmKMkC+Amm74iz1xn/Wvk99F6sbg237S55mnwQnt4 Mu+Zr4OraSgWdcyVl+csgc865ltCKmjkXN6R9PUMAGDAigDdQwUGXp1sJlsHBHkF EQXganYQVYGPivA94EzjhO2LXE2ZMUujWWrH8HB0S7+T+R/HBGyh6w45sUy/Kkfm UdkSmjx+eoJsvE1RPTmwyCltG0/wLPGqKSmPa82p49vS23amML3rAKXXeCy1bzDp TVnisVreVHtAxjiAVKEBQfGTybKLyX2xjkfIsNl2HIxbrix9u3wImhKgxvkmpplA 0A3Roujbf3HACrwSU2zsXnNbVFNyUcZBYWH9P92WlQQcyaouWn1qWktyKRk8oyxJ 3H0NzwABjqY+pRG5Ag0EaA8zywEQAM0KW3evEJjo450e5756vGu7CW8yN+QMQKe5 DjI0WK5yhIsEQ23o35Y7nahh3ID3l75zk5ok/ruFUDMkHpsmqpoqDDGdnZmYgs33 gCiCI5eQ+o1t+1R+AzSz9DCoTawQAMIW2KOq5/LdT1No2F0hcR/y995qvfRoku7s KTieGiuZFc0ycztNj6OMhIRMOkrWPAkfCV4FNoq+zA3DTzBrerVv6ImlnkLJ+SIj Zu8ZmxipuMfBEZKWFf3OXVERFhu3RVkUOatML2NmfqdP+gUO8dhXJNvePxZdPcZX NkDfYW/n1Ee927OUgIvZSDJ1LAPA8P5u5y3CJyA2oBMJKcqgrfB75t/xIl09TyaQ LRaBCuiidtcP9d19VCicO2ZjdXqj/b5lFVTgcB67OCQi7gmFYnJzvG1wWW075vHi QrgzzAqHIEFGHEN2iOlzW0lDdLyt6OA6lW/LIEfZGrGBKCKasDa/TOGme69IWcvQ dc3vzdkX6Nb25joKzu2QLREIYYsWcBPp89Sav4flv3SHPFH/M1dl4ZA5EKULVRVw rVg6Hz+aU/4Ur+cx511igT0vjhsBKc8ndedSm7/VJamZMVSo8JST4IdcbL8AtbRA vx0+MFPCYPYUwZbM0y1ZE+yTTIQsMjQCv/hX8oRMf/HPqy8LahVHlmVjUzhxU5kE JUnJwCndABEBAAGJAjYEGAEKACAWIQQlan77keuz+H/wVEQU+t4Y3ODPagUCaA8z ywIbDAAKCRAU+t4Y3ODPasOVD/9DGea8G2vam3OU7r1hUXXHQnC1K320yBTU87nQ eUs83QDlF1wCB3yy1dN39ucK+MUH3L9u+8H/tPNWJmkWow8VF8sA+CvWsdCUXglH u+u6c6wz3i/8LHNGkUborhrbjqqP71bz257nsu29KhwnH3bi6KgAoacBp7dOr5qA gaAqGC06ZXgQ4qTqir18q0PiEy1dYC5OW8Z63TZu9avZnQWJCcr1AiHOcPlzE1yZ 5zwjXe9jwWhg1Ay+3HabGWo4FZzVc6jIJA0UugkjhKK/HICMyeijV14UVArla4od zpR56tdcMbrja4PkOHhtylWAu2fn+WW9ERTK2DzzwIhgMJMDOcUpfHFMMmhnHkQw W2WBZYnyUZGURwwhmepnFqMFTPlVEIudxFDo4WSR7vdEpVL0RDFdGM5FKYK5xhGs wo2qXICvuZa/JWxIxXwgeZtbdv5awMSgnNUqvLr5qsbn2rODxr1ItRHR0Z5TS4lB H6fHM8rlkwgPxu6oJ4ap0oNBsA8GQnwSwpz5IXG+ZlCVZtMfUdXmKlgX0i9s498T ry4N7/9th77M2ELfUv1vpxm3CJvnfu/uhq6Mc52STV+FQSQ8AofHvTocoiVKXtDs AjAbOv8YbSZgGha7PptjWC5Kmcsu/IA3scGq5oVsLy5Vu7y5kKHEG+GAGtYp3mB2 kDz8kg== =JAup -----END PGP PUBLIC KEY BLOCK----- </description>
    </item>
  </channel>
</rss>
