<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Development on HirschDaniel</title>
    <link>http://localhost:1313/categories/development/</link>
    <description>Recent content in Development on HirschDaniel</description>
    <generator>Hugo -- 0.133.1</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 14 Sep 2024 14:28:15 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Refactoring and Mavenizing an Open Source Java Bruteforcer</title>
      <link>http://localhost:1313/blog/refactoring-and-mavenizing-java-bruteforcer-project/</link>
      <pubDate>Sat, 14 Sep 2024 14:28:15 +0200</pubDate>
      <guid>http://localhost:1313/blog/refactoring-and-mavenizing-java-bruteforcer-project/</guid>
      <description>Today, I’m taking on a small yet significant project: cleaning up and improving one of my older repositories on GitHub. It’s a Java bruteforcer I coded about three years ago.
Of course it can&amp;rsquo;t compete with popular bruteforcers such as hashcat, the password recovery tool that ships with Kali Linux. But it works well anyways. In fact, I managed to use the library to crack encrypted .zip files.
While the code still works well, the repository itself is not in a presentable state.</description>
    </item>
  </channel>
</rss>
